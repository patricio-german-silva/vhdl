$date
  Sat Sep 14 23:15:40 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module numeric_bit $end
$upscope $end
$scope module mybooleanalu_tb $end
$var reg 4 ! data1[3:0] $end
$var reg 4 " data2[3:0] $end
$var reg 3 # opcode[2:0] $end
$var reg 4 $ result[3:0] $end
$var reg 1 % zeroflag $end
$var reg 1 & oneflag $end
$scope module instmybooleanalu $end
$var reg 4 ' pidata1[3:0] $end
$var reg 4 ( pidata2[3:0] $end
$var reg 3 ) piopcode[2:0] $end
$var reg 4 * poresult[3:0] $end
$var reg 1 + pozeroflag $end
$var reg 1 , pooneflag $end
$var reg 4 - result[3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0110 !
b1011 "
b000 #
b0010 $
0%
0&
b0110 '
b1011 (
b000 )
b0010 *
0+
0,
b0010 -
#10000000
b001 #
b1101 $
b001 )
b1101 *
b1101 -
#20000000
b010 #
b1111 $
1&
b010 )
b1111 *
1,
b1111 -
#30000000
b011 #
b0000 $
1%
0&
b011 )
b0000 *
1+
0,
b0000 -
#40000000
b100 #
b1101 $
0%
b100 )
b1101 *
0+
b1101 -
#50000000
b101 #
b0010 $
b101 )
b0010 *
b0010 -
#60000000
b110 #
b1111 $
1&
b110 )
b1111 *
1,
b1111 -
#70000000
b111 #
b0000 $
1%
0&
b111 )
b0000 *
1+
0,
b0000 -
#80000000
b000 #
b0010 $
0%
b000 )
b0010 *
0+
b0010 -
